{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Propositional Logic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## DiscreteMath_Coding_01"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "submitted by: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Torregrosa, Othello C."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "58007"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Given English Statement: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Add additional fries and drinks to the order if the customer would buy a Cheese Burger Deluxe and add a Sundae instead if they also do. Always remember to print the receipt for every transaction."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "p: The customer buys a Cheese Burger Deluxe\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "q: Add additional fires and drinks \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "r: Add sundae \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "WFF:  $(p\\rightarrow q)  \\land (\\neg p \\rightarrow r)$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Flowchart:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"img/if.jpeg\" width=150 align=\"center\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Code as:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Cheese burger deluxe with additional fries and drinks\n",
      " Transaction Complete\n"
     ]
    }
   ],
   "source": [
    "buy_cb = True\n",
    "if(buy_cb):\n",
    "    print(\" Cheese burger deluxe with additional fries and drinks\")\n",
    "    print(\" Transaction Complete\")\n",
    "else:\n",
    "    print(\"Cheese burger deluxe and sundae\")\n",
    "    print(\"Transaction complete\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Code Explanation: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " If it is true, the customer will buy a cheese burger deluxe and it will automatically add the additional fries and drinks then print a receipt. Otherwise, if it is false, the customer will buy a cheese burger deluxe and will only add a sundae as the substitute for the fries and drinks then print a receiept. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Given Pseudocode"
   ]
    {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "def transfer_to_resource(reservoir, pool):

if pool <= 10 and reservoir > 20:
pool = reservoir


return pool"
   ]
  },
  },
  
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Convert to English Statement"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The reservoir level is at 5mm, if the rain gauge measures 10mm, it will transfer to the resource."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " p: the normal reservoir level is at 5mm \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "q: the reservoir level reaches at 10mm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "r: It will transfer to the resource"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "WFF: $p \\rightarrow (q\\rightarrow r)$ "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Flowchart: "
   ]
  },
    "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"img/nest.jpeg\" width=150 align=\"center\"/>"
   ]
  },
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
